apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: horrible-stats
spec:
  replicas: 1
  selector:
    matchLabels:
      name: app
  template:
    metadata:
      labels:
        name: app
        run: stats-app
    spec:
      containers:
      - name: app
        image: localhost:32000/horrible_stats:latest
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/etc/keys/dcs-storage-gcs.json"
          - name: DATABASE_URL
            value: postgresql://db:5432/dcs?user=prod&password=pwd
          - name: TACVIEW_DSN
            value: postgresql://db:5432/dcs?user=prod&password=pwd
          - name: WEB_CONCURRENCY
            value: "4"
          - name: BIND
            value: "0.0.0.0:8080"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: dcs-storage-gcs
          mountPath: "/etc/keys/"
          readOnly: true
      volumes:
      - name: dcs-storage-gcs
        secret:
          secretName: dcs-storage-gcs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stat-updater
  namespace: horrible-stats
spec:
  replicas: 1
  selector:
    matchLabels:
      name: stat-updater
  template:
    metadata:
      labels:
        name: stat-updater
    spec:
      containers:
      - name: stat-updater
        image: localhost:32000/horrible_stats:latest
        command: ["python", "file_updater.py"]
        args: ["--prefix", "mission-stats", "--interval", "10"]
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/etc/keys/dcs-storage-gcs.json"
          - name: DATABASE_URL
            value: postgresql://db:5432/dcs?user=prod&password=pwd
          - name: TACVIEW_DSN
            value: postgresql://db:5432/dcs?user=prod&password=pwd
        volumeMounts:
        - name: dcs-storage-gcs
          mountPath: "/etc/keys/"
          readOnly: true
      volumes:
      - name: dcs-storage-gcs
        secret:
          secretName: dcs-storage-gcs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: event-updater
  namespace: horrible-stats
spec:
  replicas: 1
  selector:
    matchLabels:
      name: event-updater
  template:
    metadata:
      labels:
        name: event-updater
    spec:
      containers:
      - name: event-updater
        image: localhost:32000/horrible_stats:latest
        command: ["python", "file_updater.py"]
        args: ["--prefix", "mission-events", "--interval", "10"]
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/etc/keys/dcs-storage-gcs.json"
          - name: DATABASE_URL
            value: postgresql://db:5432/dcs?user=prod&password=pwd
          - name: TACVIEW_DSN
            value: postgresql://db:5432/dcs?user=prod&password=pwd
        volumeMounts:
        - name: dcs-storage-gcs
          mountPath: "/etc/keys/"
          readOnly: true
      volumes:
      - name: dcs-storage-gcs
        secret:
          secretName: dcs-storage-gcs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tacview-updater
  namespace: horrible-stats
spec:
  replicas: 1
  selector:
    matchLabels:
      name: tacview-updater
  template:
    metadata:
      labels:
        name: tacview-updater
    spec:
      containers:
      - name: tacview-updater
        image: localhost:32000/horrible_stats:latest
        command: ["python", "file_updater.py"]
        args: ["--prefix", "tacview", "--interval", "5"]
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/etc/keys/dcs-storage-gcs.json"
          - name: DATABASE_URL
            value: postgresql://db:5432/dcs?user=prod&password=pwd
          - name: TACVIEW_DSN
            value: postgresql://db:5432/dcs?user=prod&password=pwd
        volumeMounts:
        - name: dcs-storage-gcs
          mountPath: "/etc/keys/"
          readOnly: true
      volumes:
      - name: dcs-storage-gcs
        secret:
          secretName: dcs-storage-gcs
---
  apiVersion: v1
  kind: Service
  metadata:
    namespace: horrible-stats
    name: app-svc
    labels:
      name: app-svc
  spec:
    type: LoadBalancer
    loadBalancerIP: "35.226.240.39"
    ports:
      - port: 80
        targetPort: 8080
        name: http
      - port: 443
        targetPort: 8080
        name: https
    selector:
      name: app
